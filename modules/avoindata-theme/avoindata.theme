<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\views\ViewExecutable;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_region().
 */
function avoindata_preprocess_region(array &$variables) {
  $variables['language'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
}

/**
 * Implements hook_views_pre_render().
 */
function avoindata_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'frontpage' && $view->current_display == 'page_1') {
    // Use some or all of the following 3 lines to remove specific
    // 'no results' behaviors.
    unset($view->empty['area_text_custom']);
    unset($view->empty['node_listing_empty']);
    unset($view->empty['title']);
  }
}

/**
 * Implements hook_form_user_login_from_alter().
 */
function avoindata_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  $passwordResetUrl = Url::fromUri('internal:/user/password');
  $form['password_reset_link'] = [
    '#type' => 'link',
    '#url' => $passwordResetUrl,
    '#title' => t('Reset password'),
    '#attributes' => ['class' => ['password-reset-link']],
  ];

  $registertUrl = Url::fromUri('internal:/user/register');
  $form['register_account_link'] = [
    '#type' => 'link',
    '#url' => $registertUrl,
    '#title' => t('Register new account'),
    '#attributes' => ['class' => ['register-user-link']],
  ];
}

/**
 * Implements hook_preprocess_links__language_block().
 */
function avoindata_preprocess_links__language_block(&$variables) {
  $variables['language'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
  foreach ($variables['links'] as $key => $value) {
    $variables['links'][$key]['link']['#title'] .= ' (' . strtoupper($key) . ')';
  }
}

/**
 * Implements hook_template_preprocess_html().
 */
function avoindata_preprocess_html(array &$variables){
  global $base_url;
  $variables['base_url'] = $base_url;
}

/**
 * Implements hook_preprocess_menu().
 */
function avoindata_preprocess_menu(&$variables, $hook){
  if ($hook === 'menu__main_fi' || $hook === 'menu__main_sv' || $hook === 'menu__main_en') {
    $variables['#cache']['max-age'] = 0;
    $currentPath = preg_replace("/\//", "\\/", \Drupal::service('path.current')->getPath());
    $items = $variables['items'];
    $pattern = "/\/data\/(fi|sv|en)$currentPath/";
    
    foreach($items as $key => $item) {
      if (preg_match($pattern, $item['url']->toString()) === 1) {
        $variables['items'][$key]['is_active'] = true;
      } else {
        $variables['items'][$key]['is_active'] = false;
      }
    }
  }
}
