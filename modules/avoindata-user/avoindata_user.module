<?php

/**
 * @file
 * Modifies username validators and template texts.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_user_form_user_form_alter().
 */
function avoindata_user_form_user_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['account']['name']['#description'] = t("Must be purely lowercase alphanumeric (ascii) characters and these symbols: -_");
  avoindata_user_add_name_validator($form);
}

/**
 * Implements hook_form_user_register_form_alter().
 */
function avoindata_form_user_register_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['account']['name']['#description'] = t("Must be purely lowercase alphanumeric (ascii) characters and these symbols: -_");
  avoindata_user_add_name_validator($form);
}

/**
 * Adds user name validator.
 *
 * @param array $form
 *   Nested array of form elements that comprise the form.
 */
function avoindata_user_add_name_validator(array &$form) {

  $validate =& $form['#validate'];

  // Since `validate_name()` clears out any errors for the "name" field, we
  // want to put it right after the validator we want to partially override.
  $acct_validate_index = array_search('user_account_form_validate', $validate);
  array_splice($validate, ($acct_validate_index + 1), 0,
    ['avoindata_user_validate_name']
  );

}

/**
 * Implements user name validator.
 *
 * @param array $form
 *   Nested array of form elements that comprise the form.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function avoindata_user_validate_name(array $form, FormStateInterface &$form_state) {

  $name = $form_state->getValue('name', NULL);

  if (!preg_match('/^[a-z0-9_\-]*$/', $name)) {

    $error = t('The username contains an illegal character.');
  }

  if (isset($error)) {
    $form_state->setErrorByName('name', $error);
  }

}
